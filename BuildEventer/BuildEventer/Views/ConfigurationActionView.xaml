<UserControl x:Class="BuildEventer.Views.ConfigurationActionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:behaviors="clr-namespace:BuildEventer.Behaviors"
             mc:Ignorable="d">
    <Grid MinHeight="600">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="500"/>
            <ColumnDefinition MinWidth="250"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <GroupBox>
                <GroupBox.Header>
                    <StackPanel HorizontalAlignment="Center">
                        <TextBox Text="Action Configuration" FontWeight="Bold"></TextBox>
                    </StackPanel>
                </GroupBox.Header>
                <Grid>
                    <ContentControl Content="{Binding ActionUI}"/>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1" >
            <Grid.Resources>
                <Style x:Key="alternatingListViewItemStyle" TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#FFD9F2BF"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="ItemsControl.AlternationIndex" Value="0"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGreen"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="ItemsControl.AlternationIndex" Value="1"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <GroupBox Header="List Actions:" FontWeight="Bold">
                <ListBox x:Name="ActionListBox" AllowDrop="False" ItemsSource="{Binding Path=ViewModels,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         IsSynchronizedWithCurrentItem="True"
                         SelectedItem="{Binding SelectedViewModel, Mode=TwoWay}"
                         SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                         SelectionMode="Single">
                    <ListBox.Resources>
                        <!--Defines a context menu-->
                        <ContextMenu x:Key="ElementItemMenu">
                            <MenuItem Header="Delete Selected Action"
                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteSelectedActionCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"/>
                        </ContextMenu>
                        <ContextMenu x:Key="ListBoxMenu">
                            <MenuItem Header="New Action"
                                      Command="{Binding CreateActionCommand}"/>
                        </ContextMenu>
                        <!--Sets a context menu for each ListBoxItem in the current ListBox-->
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ElementItemMenu}"/>
                        </Style>
                        <!--Sets a context menu for current ListBox-->
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="ContextMenu" Value="{StaticResource ListBoxMenu}"/>
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Action.Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
        </Grid>
        <Button Grid.Row="1" Grid.Column="0" x:Name="cmdApply" Width="80" Height="30" HorizontalAlignment="Center"
                Content="Save Changes" Command="{Binding Path=SaveChangedCommand, UpdateSourceTrigger=PropertyChanged}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Blue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Grid.Row="1" Grid.Column="1" Width="80" Height="30" HorizontalAlignment="Center"
                Content="New Action" Command="{Binding Path=CreateActionCommand}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Blue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
